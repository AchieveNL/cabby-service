name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: ${{ secrets.GAR_LOCATION }}
  SERVICE: ${{ secrets.SERVICE_NAME }}
  REGION: ${{ secrets.REGION }}
  IMAGE_URL: gcr.io/cabby-392012/cabby-service

jobs:
  build-and-check:
    runs-on: ubuntu-latest
    steps:
      - name: List directory contents
        run: ls -al
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm install

      - name: Check Types
        run: npm run check:types

      - name: Prettier Check
        run: npm run format:check

      - name: Build
        run: npm run build

  deploy-staging:
    environment:
      name: staging
    needs: build-and-check
    runs-on: ubuntu-latest
    steps:
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image to GCR
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: |
          echo "$GCP_CREDENTIALS" | docker login -u _json_key --password-stdin https://gcr.io
          docker build -t ${{ env.IMAGE_URL }}:${{ github.sha }} .
          docker push ${{ env.IMAGE_URL }}:${{ github.sha }}

      - name: Deploy to Cloud Run Staging
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ secrets.REGION }}
          image: ${{ env.IMAGE_URL }}
          env_vars: |
            NODE_ENV=staging
            ENVIRONMENT=staging
            APP_BASE_URL=https://cabby-service-staging-jtj2mdm6ta-ez.a.run.app
            SECRET_KEY=${{ secrets.SECRET_KEY_STAGING }}
            DATABASE_URL=${{ secrets.DATABASE_URL_STAGING }}
            SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY_STAGING }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY_STAGING }}
            JWT_REFRESH_SECRET_KEY=${{ secrets.JWT_REFRESH_SECRET_KEY_STAGING }}
            MOLLIE_API_KEY=${{ secrets.MOLLIE_API_KEY_STAGING }}

  deploy-production:
    environment:
      name: production
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    needs: build-and-check
    runs-on: ubuntu-latest
    steps:
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image to GCR
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: |
          echo "$GCP_CREDENTIALS" | docker login -u _json_key --password-stdin https://gcr.io
          docker build -t ${{ env.IMAGE_URL }}:${{ github.sha }} .
          docker push ${{ env.IMAGE_URL }}:${{ github.sha }}

      - name: Deploy to Cloud Run Production
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ secrets.REGION }}
          image: ${{ env.IMAGE_URL }}
          env_vars: |
            NODE_ENV=production
            ENVIRONMENT=production
            APP_BASE_URL=https://cabby-service-production-jtj2mdm6ta-ez.a.run.app
            SECRET_KEY=${{ secrets.SECRET_KEY_PRODUCTION }}
            DATABASE_URL=${{ secrets.DATABASE_URL_PRODUCTION }}
            SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY_PRODUCTION }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY_PRODUCTION }}
            JWT_REFRESH_SECRET_KEY=${{ secrets.JWT_REFRESH_SECRET_KEY_PRODUCTION }}
            MOLLIE_API_KEY=${{ secrets.MOLLIE_API_KEY_PRODUCTION }}
